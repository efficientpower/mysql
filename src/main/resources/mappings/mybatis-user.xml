<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.wjh.dao.UserDao">
	<resultMap id="BaseResultMap" type="org.wjh.domain.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="db_create_time" property="dbCreateTime" jdbcType="TIMESTAMP" />
		<result column="db_update_time" property="dbUpdateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, name, db_create_time, db_update_time
	</sql>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user where id=#{id, jdbcType=INTEGER}
	</select>
	<select id="getByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user where user_id = #{userId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from user where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByUserId" parameterType="java.lang.String">
		delete from user user_id = #{userId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" useGeneratedKeys="true" parameterType="org.wjh.domain.User">
	    <selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="Integer">
	       select last_insert_id()
	    </selectKey>
		insert into user (user_id, name, db_create_time, db_update_time)
		values
		(
			#{userId,jdbcType=VARCHAR}, 
			#{name,jdbcType=VARCHAR},
			#{dbCreateTime,jdbcType=TIMESTAMP},
			#{dbUpdateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" parameterType="org.wjh.domain.User">
	    <selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="Integer">
           select last_insert_id()
        </selectKey>
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="dbCreateTime != null">
				db_create_time,
			</if>
			<if test="dbUpdateTime != null">
				db_update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="dbCreateTime != null">
				#{dbCreateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="dbUpdateTime != null">
				#{dbUpdateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="org.wjh.domain.User">
        update user
        set name = #{name,jdbcType=VARCHAR},
        db_create_time = #{dbCreateTime,jdbcType=TIMESTAMP},
        db_update_time = #{dbUpdateTime,jdbcType=TIMESTAMP}
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
	<update id="updateSelective" parameterType="org.wjh.domain.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="dbCreateTime != null">
				db_create_time = #{dbCreateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="dbUpdateTime != null">
				db_update_time = #{dbUpdateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>
	<select id="list" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
		limit #{offset}, #{size}
	</select>
</mapper>